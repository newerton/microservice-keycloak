module.controller("ResourceServerCtrl",(function(e,t,r){e.realm=t,r.query({realm:t.realm},(function(t){e.servers=t}))})),module.controller("ResourceServerDetailCtrl",(function(e,t,r,i,n,l,s,c,o,a,u){e.realm=s,e.client=o,c.get({realm:r.current.params.realm,client:o.id},(function(t){e.server=angular.copy(t),e.changed=!1,e.$watch("server",(function(){angular.equals(e.server,t)||(e.changed=!0)}),!0),e.save=function(){c.update({realm:s.realm,client:e.server.clientId},e.server,(function(){r.reload(),u.success("The resource server has been created.")}))},e.reset=function(){r.reload()},e.export=function(){e.exportSettings=!0,c.settings({realm:r.current.params.realm,client:o.id},(function(t){var r=angular.fromJson(t);e.settings=angular.toJson(r,!0)}))},e.downloadSettings=function(){saveAs(new Blob([e.settings],{type:"application/json"}),e.server.name+"-authz-config.json")},e.cancelExport=function(){delete e.settings},e.onFileSelect=function(t){e.server=angular.copy(JSON.parse(t)),e.importing=!0},e.viewImportDetails=function(){l.open({templateUrl:resourceUrl+"/partials/modal/view-object.html",controller:"ObjectModalCtrl",resolve:{object:function(){return e.server}}})},e.import=function(){c.import({realm:s.realm,client:o.id},e.server,(function(){r.reload(),u.success("The resource server has been updated.")}))}}))}));var Resources={delete:function(e,t,r,n,l,s,c,o){e.permissions({realm:t,client:r.id,rsrid:n.resource._id},(function(r){var a="";if(r.length>0&&!n.deleteConsent){for(a="<p>This resource is referenced in some permissions:</p>",a+="<ul>",i=0;i<r.length;i++)a+="<li><strong>"+r[i].name+"</strong></li>";a+="</ul>",a+="<p>If you remove this resource, the permissions above will be affected and will not be associated with this resource anymore.</p>"}l.confirmDeleteWithMsg(n.resource.name,"Resource",a,(function(){e.delete({realm:t,client:n.client.id,rsrid:n.resource._id},null,(function(){s.url("/realms/"+t+"/clients/"+n.client.id+"/authz/resource-server/resource"),o.reload(),c.success("The resource has been deleted.")}))}))}))}},Policies={delete:function(e,t,r,n,l,s,c,o,a){var u="";e.dependentPolicies({realm:t,client:r.id,id:n.policy.id},(function(r){if(r.length>0&&!n.deleteConsent){for(u="<p>This policy is being used by other policies:</p>",u+="<ul>",i=0;i<r.length;i++)u+="<li><strong>"+r[i].name+"</strong></li>";u+="</ul>",u+="<p>If you remove this policy, the policies above will be affected and will not be associated with this policy anymore.</p>"}l.confirmDeleteWithMsg(n.policy.name,a?"Permission":"Policy",u,(function(){e.delete({realm:t,client:n.client.id,id:n.policy.id},null,(function(){a?(s.url("/realms/"+t+"/clients/"+n.client.id+"/authz/resource-server/permission"),c.success("The permission has been deleted.")):(s.url("/realms/"+t+"/clients/"+n.client.id+"/authz/resource-server/policy"),c.success("The policy has been deleted.")),o.reload()}))}))}))}};module.controller("ResourceServerResourceCtrl",(function(e,t,r,n,l,s,c,o,a,u,d){e.realm=l,e.client=o,e.query={realm:l.realm,client:o.id,deep:!1,max:20,first:0},e.listSizes=[5,10,20],s.get({realm:r.current.params.realm,client:o.id},(function(t){e.server=t,e.createPolicy=function(e){d.state={},d.state.previousUrl="/realms/"+r.current.params.realm+"/clients/"+o.id+"/authz/resource-server/resource",n.path("/realms/"+r.current.params.realm+"/clients/"+o.id+"/authz/resource-server/permission/resource/create").search({rsrid:e._id})},e.searchQuery()})),e.firstPage=function(){e.query.first=0,e.searchQuery()},e.previousPage=function(){e.query.first-=parseInt(e.query.max),e.query.first<0&&(e.query.first=0),e.searchQuery()},e.nextPage=function(){e.query.first+=parseInt(e.query.max),e.searchQuery()},e.searchQuery=function(){e.searchLoaded=!1,c.query(e.query,(function(t){e.searchLoaded=!0,e.lastSearch=e.query.search,e.resources=t,e.detailsFilter&&e.showDetails()}))},e.loadDetails=function(e){e.details?e.details.loaded=!e.details.loaded:(e.details={loaded:!1},c.scopes({realm:r.current.params.realm,client:o.id,rsrid:e._id},(function(t){e.scopes=t,c.permissions({realm:r.current.params.realm,client:o.id,rsrid:e._id},(function(t){e.policies=t,e.details.loaded=!0}))})))},e.showDetails=function(t,r){if("a"!=r.target.localName&&"button"!=r.target.localName)if(t)e.loadDetails(t);else for(i=0;i<e.resources.length;i++)e.loadDetails(e.resources[i])},e.delete=function(t){e.resource=t,Resources.delete(c,r.current.params.realm,o,e,a,n,u,r)}})),module.controller("ResourceServerResourceDetailCtrl",(function(e,t,r,n,l,s,c,o,a,u,d){e.realm=l,e.client=c,e.scopesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:l.realm,client:c.id,name:t.term.trim(),deep:!1,max:20,first:0},a.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.name},formatSelection:function(e,t,r){return e.name}};var p=this;s.get({realm:r.current.params.realm,client:c.id},(function(t){if(e.server=t,r.current.params.rsrid)o.get({realm:r.current.params.realm,client:c.id,rsrid:r.current.params.rsrid},(function(t){t.scopes||(t.scopes=[]),t.attributes||(t.attributes={}),e.resource=angular.copy(t),e.changed=!1,e.originalResource=angular.copy(e.resource),e.$watch("resource",(function(){angular.equals(e.resource,t)||(e.changed=!0)}),!0),e.$watch("newUri",(function(){e.newUri&&e.newUri.length>0&&(e.changed=!0)}),!0),e.save=function(){for(e.newUri&&e.newUri.length>0&&e.addUri(),i=0;i<e.resource.scopes.length;i++)delete e.resource.scopes[i].text;for(var t=Object.keys(e.resource.attributes),n=0;n<t.length;n++){var s=t[n],c=e.resource.attributes[s].toString().split(",");for(e.resource.attributes[s]=[],j=0;j<c.length;j++)e.resource.attributes[s].push(c[j])}p.checkNameAvailability((function(){o.update({realm:l.realm,client:e.client.id,rsrid:e.resource._id},e.resource,(function(){r.reload(),d.success("The resource has been updated.")}))}))},e.remove=function(){Resources.delete(o,r.current.params.realm,c,e,u,n,d,r)},e.reset=function(){r.reload()}}));else{e.create=!0,e.changed=!1;var s={scopes:[],attributes:{},uris:[]};e.resource=angular.copy(s),e.$watch("resource",(function(){angular.equals(e.resource,s)||(e.changed=!0)}),!0),e.$watch("newUri",(function(){e.newUri&&e.newUri.length>0&&(e.changed=!0)}),!0),e.save=function(){for(e.newUri&&e.newUri.length>0&&e.addUri(),i=0;i<e.resource.scopes.length;i++)delete e.resource.scopes[i].text;p.checkNameAvailability((function(){o.save({realm:l.realm,client:e.client.id},e.resource,(function(t){n.url("/realms/"+l.realm+"/clients/"+e.client.id+"/authz/resource-server/resource/"+t._id),d.success("The resource has been created.")}))}))},e.reset=function(){n.url("/realms/"+l.realm+"/clients/"+e.client.id+"/authz/resource-server/resource/")}}})),e.checkNewNameAvailability=function(){p.checkNameAvailability((function(){}))},this.checkNameAvailability=function(t){e.resource.name&&0!=e.resource.name.trim().length&&o.search({realm:r.current.params.realm,client:c.id,rsrid:r.current.params.rsrid,name:e.resource.name},(function(r){r&&r._id&&r._id!=e.resource._id?d.error("Name already in use by another resource, please choose another one."):t()}))},e.addAttribute=function(){e.resource.attributes[e.newAttribute.key]=e.newAttribute.value,delete e.newAttribute},e.removeAttribute=function(t){delete e.resource.attributes[t]},e.addUri=function(){e.resource.uris.push(e.newUri),e.newUri=""},e.deleteUri=function(t){e.resource.uris.splice(t,1)}}));var Scopes={delete:function(e,t,r,n,l,s,c,o){e.permissions({realm:t,client:r.id,id:n.scope.id},(function(r){var a="";if(r.length>0&&!n.deleteConsent){for(a="<p>This scope is referenced in some permissions:</p>",a+="<ul>",i=0;i<r.length;i++)a+="<li><strong>"+r[i].name+"</strong></li>";a+="</ul>",a+="<p>If you remove this scope, the permissions above will be affected and will not be associated with this scope anymore.</p>"}l.confirmDeleteWithMsg(n.scope.name,"Scope",a,(function(){e.delete({realm:t,client:n.client.id,id:n.scope.id},null,(function(){s.url("/realms/"+t+"/clients/"+n.client.id+"/authz/resource-server/scope"),o.reload(),c.success("The scope has been deleted.")}))}))}))}};module.controller("ResourceServerScopeCtrl",(function(e,t,r,n,l,s,c,o,a,u,d){e.realm=l,e.client=o,e.query={realm:l.realm,client:o.id,deep:!1,max:20,first:0},e.listSizes=[5,10,20],s.get({realm:r.current.params.realm,client:o.id},(function(t){e.server=t,e.createPolicy=function(e){d.state={},d.state.previousUrl="/realms/"+r.current.params.realm+"/clients/"+o.id+"/authz/resource-server/scope",n.path("/realms/"+r.current.params.realm+"/clients/"+o.id+"/authz/resource-server/permission/scope/create").search({scpid:e.id})},e.searchQuery()})),e.firstPage=function(){e.query.first=0,e.searchQuery()},e.previousPage=function(){e.query.first-=parseInt(e.query.max),e.query.first<0&&(e.query.first=0),e.searchQuery()},e.nextPage=function(){e.query.first+=parseInt(e.query.max),e.searchQuery()},e.searchQuery=function(t){e.searchLoaded=!1,c.query(e.query,(function(t){e.scopes=t,e.searchLoaded=!0,e.lastSearch=e.query.search,e.detailsFilter&&e.showDetails()}))},e.loadDetails=function(e){e.details?e.details.loaded=!e.details.loaded:(e.details={loaded:!1},c.resources({realm:r.current.params.realm,client:o.id,id:e.id},(function(t){e.resources=t,c.permissions({realm:r.current.params.realm,client:o.id,id:e.id},(function(t){e.policies=t,e.details.loaded=!0}))})))},e.showDetails=function(t,r){if("a"!=r.target.localName&&"button"!=r.target.localName)if(t)e.loadDetails(t);else for(i=0;i<e.scopes.length;i++)e.loadDetails(e.scopes[i])},e.delete=function(t){e.scope=t,Scopes.delete(c,r.current.params.realm,o,e,a,n,u,r)}})),module.controller("ResourceServerScopeDetailCtrl",(function(e,t,r,i,n,l,s,c,o,a){e.realm=n,e.client=s;var u=this;l.get({realm:r.current.params.realm,client:s.id},(function(t){if(e.server=t,r.current.params.id)c.get({realm:r.current.params.realm,client:s.id,id:r.current.params.id},(function(t){e.scope=angular.copy(t),e.changed=!1,e.$watch("scope",(function(){angular.equals(e.scope,t)||(e.changed=!0)}),!0),e.originalScope=angular.copy(e.scope),e.save=function(){u.checkNameAvailability((function(){c.update({realm:n.realm,client:e.client.id,id:e.scope.id},e.scope,(function(){e.changed=!1,a.success("The scope has been updated.")}))}))},e.remove=function(){Scopes.delete(c,r.current.params.realm,s,e,o,i,a,r)},e.reset=function(){r.reload()}}));else{e.create=!0,e.changed=!1;var l={};e.scope=angular.copy(l),e.$watch("scope",(function(){angular.equals(e.scope,l)||(e.changed=!0)}),!0),e.save=function(){u.checkNameAvailability((function(){c.save({realm:n.realm,client:e.client.id},e.scope,(function(e){i.url("/realms/"+n.realm+"/clients/"+s.id+"/authz/resource-server/scope/"+e.id),a.success("The scope has been created.")}))}))},e.reset=function(){i.url("/realms/"+n.realm+"/clients/"+e.client.id+"/authz/resource-server/scope/")}}})),e.checkNewNameAvailability=function(){u.checkNameAvailability((function(){}))},this.checkNameAvailability=function(t){e.scope.name&&0!=e.scope.name.trim().length&&c.search({realm:r.current.params.realm,client:s.id,name:e.scope.name},(function(r){r&&r.id&&r.id!=e.scope.id?a.error("Name already in use by another scope, please choose another one."):t()}))}})),module.controller("ResourceServerPolicyCtrl",(function(e,t,r,n,l,s,c,o,a,u,d,p){e.realm=l,e.client=a,e.policyProviders=[],e.query={realm:l.realm,client:a.id,permission:!1,max:20,first:0},e.listSizes=[5,10,20],o.query({realm:r.current.params.realm,client:a.id},(function(t){for(i=0;i<t.length;i++)"resource"!=t[i].type&&"scope"!=t[i].type&&e.policyProviders.push(t[i])})),s.get({realm:r.current.params.realm,client:a.id},(function(t){e.server=t,e.searchQuery()})),e.addPolicy=function(e){p.endsWith(e.type,".js")?c.save({realm:l.realm,client:a.id,type:e.type},{name:e.name,type:e.type},(function(e){n.url("/realms/"+l.realm+"/clients/"+a.id+"/authz/resource-server/policy/"),d.success("The policy has been created.")})):n.url("/realms/"+l.realm+"/clients/"+a.id+"/authz/resource-server/policy/"+e.type+"/create")},e.firstPage=function(){e.query.first=0,e.searchQuery()},e.previousPage=function(){e.query.first-=parseInt(e.query.max),e.query.first<0&&(e.query.first=0),e.searchQuery()},e.nextPage=function(){e.query.first+=parseInt(e.query.max),e.searchQuery()},e.searchQuery=function(){e.searchLoaded=!1,c.query(e.query,(function(t){e.policies=t,e.searchLoaded=!0,e.lastSearch=e.query.search,e.detailsFilter&&e.showDetails()}))},e.loadDetails=function(e){e.details?e.details.loaded=!e.details.loaded:(e.details={loaded:!1},c.dependentPolicies({realm:r.current.params.realm,client:a.id,id:e.id},(function(t){e.dependentPolicies=t,e.details.loaded=!0})))},e.showDetails=function(t,r){if("a"!=r.target.localName&&"button"!=r.target.localName)if(t)e.loadDetails(t);else for(i=0;i<e.policies.length;i++)e.loadDetails(e.policies[i])},e.delete=function(t){e.policy=t,Policies.delete(c,r.current.params.realm,a,e,u,n,d,r,!1)}})),module.controller("ResourceServerPermissionCtrl",(function(e,t,r,n,l,s,c,o,a,u,d){e.realm=l,e.client=a,e.policyProviders=[],e.query={realm:l.realm,client:a.id,max:20,first:0},e.listSizes=[5,10,20],o.query({realm:r.current.params.realm,client:a.id},(function(t){for(i=0;i<t.length;i++)"resource"!=t[i].type&&"scope"!=t[i].type||e.policyProviders.push(t[i])})),s.get({realm:r.current.params.realm,client:a.id},(function(t){e.server=t,e.searchQuery()})),e.addPolicy=function(e){n.url("/realms/"+l.realm+"/clients/"+a.id+"/authz/resource-server/permission/"+e.type+"/create")},e.firstPage=function(){e.query.first=0,e.searchQuery()},e.previousPage=function(){e.query.first-=parseInt(e.query.max),e.query.first<0&&(e.query.first=0),e.searchQuery()},e.nextPage=function(){e.query.first+=parseInt(e.query.max),e.searchQuery()},e.searchQuery=function(){e.searchLoaded=!1,c.query(e.query,(function(t){e.policies=t,e.searchLoaded=!0,e.lastSearch=e.query.search,e.detailsFilter&&e.showDetails()}))},e.loadDetails=function(e){e.details?e.details.loaded=!e.details.loaded:(e.details={loaded:!1},c.associatedPolicies({realm:r.current.params.realm,client:a.id,id:e.id},(function(t){e.associatedPolicies=t,e.details.loaded=!0})))},e.showDetails=function(t,r){if("a"!=r.target.localName&&"button"!=r.target.localName)if(t)e.loadDetails(t);else for(i=0;i<e.policies.length;i++)e.loadDetails(e.policies[i])},e.delete=function(t){e.policy=t,Policies.delete(c,r.current.params.realm,a,e,u,n,d,r,!0)}})),module.controller("ResourceServerPolicyResourceDetailCtrl",(function(e,t,r,n,l,s,c,o,a){s.onInit({getPolicyType:function(){return"resource"},isPermission:function(){return!0},onInit:function(){e.resourcesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,id:function(e){return e._id},query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:n.realm,client:l.id,name:t.term.trim(),deep:!1,max:20,first:0},o.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},e.policiesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:n.realm,client:l.id,permission:!1,name:t.term.trim(),max:20,first:0},c.searchPolicies(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},e.applyToResourceType=function(){e.applyToResourceTypeFlag?e.selectedResource=null:e.policy.resourceType=null}},onInitUpdate:function(r){r.resourceType?e.applyToResourceTypeFlag=!0:(e.selectedResource={},c.resources({realm:t.current.params.realm,client:l.id,id:r.id},(function(t){t[0].text=t[0].name,e.selectedResource=t[0];var r=angular.copy(e.selectedResource);e.$watch("selectedResource",(function(){angular.equals(e.selectedResource,r)||(e.changed=!0)}),!0)}))),c.associatedPolicies({realm:t.current.params.realm,client:l.id,id:r.id},(function(t){for(e.selectedPolicies=[],i=0;i<t.length;i++)t[i].text=t[i].name,e.selectedPolicies.push(t[i]);var r=angular.copy(e.selectedPolicies);e.$watch("selectedPolicies",(function(){angular.equals(e.selectedPolicies,r)||(e.changed=!0)}),!0)}))},onUpdate:function(){e.selectedResource&&e.selectedResource._id?(e.policy.resources=[],e.policy.resources.push(e.selectedResource._id)):e.policy.resources=[];var t=[];for(i=0;i<e.selectedPolicies.length;i++)t.push(e.selectedPolicies[i].id);e.policy.policies=t,delete e.policy.config},onInitCreate:function(i){a.state.previousPage.name="authz-add-resource-permission",e.selectedResource=null;var n=angular.copy(e.selectedResource);e.$watch("selectedResource",(function(){angular.equals(e.selectedResource,n)||(e.changed=!0)}),!0),e.selectedPolicies=null;n=angular.copy(e.selectedPolicies);e.$watch("selectedPolicies",(function(){angular.equals(e.selectedPolicies,n)||(e.changed=!0)}),!0);var s=r.search().rsrid;s&&o.get({realm:t.current.params.realm,client:l.id,rsrid:s},(function(t){t.text=t.name,e.selectedResource=t}))},onCreate:function(){e.selectedResource&&e.selectedResource._id?(e.policy.resources=[],e.policy.resources.push(e.selectedResource._id)):delete e.policy.resources;var t=[];if(e.selectedPolicies)for(i=0;i<e.selectedPolicies.length;i++)t.push(e.selectedPolicies[i].id);e.policy.policies=t,delete e.policy.config},onSaveState:function(t){a.state.selectedResource=e.selectedResource,a.state.applyToResourceTypeFlag=e.applyToResourceTypeFlag},onRestoreState:function(t){e.selectedResource=a.state.selectedResource,e.applyToResourceTypeFlag=a.state.applyToResourceTypeFlag,t.resourceType=a.state.policy.resourceType}},n,l,e)})),module.controller("ResourceServerPolicyScopeDetailCtrl",(function(e,t,r,n,l,s,c,o,a,u){s.onInit({getPolicyType:function(){return"scope"},isPermission:function(){return!0},onInit:function(){e.scopesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:n.realm,client:l.id,name:t.term.trim(),deep:!1,max:20,first:0},a.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},e.resourcesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,id:function(e){return e._id},query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:n.realm,client:l.id,name:t.term.trim(),deep:!1,max:20,first:0},o.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},e.policiesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:n.realm,client:l.id,permission:!1,name:t.term.trim(),max:20,first:0},c.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},e.selectResource=function(){e.selectedScopes=null,e.selectedResource&&o.scopes({realm:t.current.params.realm,client:l.id,rsrid:e.selectedResource._id},(function(t){e.resourceScopes=t}))}},onInitUpdate:function(r){c.resources({realm:t.current.params.realm,client:l.id,id:r.id},(function(n){if(n.length>0){for(i=0;i<n.length;i++)o.get({realm:t.current.params.realm,client:l.id,rsrid:n[0]._id},(function(r){o.query({realm:t.current.params.realm,client:l.id,_id:r._id,deep:!1},(function(r){r[0].text=r[0].name,e.selectedResource=r[0];var i=angular.copy(e.selectedResource);e.$watch("selectedResource",(function(){angular.equals(e.selectedResource,i)||(e.changed=!0)}),!0),o.scopes({realm:t.current.params.realm,client:l.id,rsrid:r[0]._id},(function(t){e.resourceScopes=t}))}))}));c.scopes({realm:t.current.params.realm,client:l.id,id:r.id},(function(t){for(e.selectedScopes=[],i=0;i<t.length;i++)t[i].text=t[i].name,e.selectedScopes.push(t[i].id);var r=angular.copy(e.selectedScopes);e.$watch("selectedScopes",(function(){angular.equals(e.selectedScopes,r)||(e.changed=!0)}),!0)}))}else{e.selectedResource=null;var s=angular.copy(e.selectedResource);e.$watch("selectedResource",(function(){angular.equals(e.selectedResource,s)||(e.changed=!0)}),!0),c.scopes({realm:t.current.params.realm,client:l.id,id:r.id},(function(t){for(e.selectedScopes=[],i=0;i<t.length;i++)t[i].text=t[i].name,e.selectedScopes.push(t[i]);var r=angular.copy(e.selectedScopes);e.$watch("selectedScopes",(function(){angular.equals(e.selectedScopes,r)||(e.changed=!0)}),!0)}))}})),c.associatedPolicies({realm:t.current.params.realm,client:l.id,id:r.id},(function(t){for(e.selectedPolicies=[],i=0;i<t.length;i++)t[i].text=t[i].name,e.selectedPolicies.push(t[i]);var r=angular.copy(e.selectedPolicies);e.$watch("selectedPolicies",(function(){angular.equals(e.selectedPolicies,r)||(e.changed=!0)}),!0)}))},onUpdate:function(){null!=e.selectedResource?e.policy.resources=[e.selectedResource._id]:e.policy.resources=[];var t=[];for(i=0;i<e.selectedScopes.length;i++)e.selectedScopes[i].id?t.push(e.selectedScopes[i].id):t.push(e.selectedScopes[i]);e.policy.scopes=t;var r=[];if(e.selectedPolicies)for(i=0;i<e.selectedPolicies.length;i++)r.push(e.selectedPolicies[i].id);e.policy.policies=r,delete e.policy.config},onInitCreate:function(i){u.state.previousPage.name="authz-add-scope-permission";var n=r.search().scpid;n&&a.get({realm:t.current.params.realm,client:l.id,id:n},(function(t){t.text=t.name,e.policy.scopes||(e.selectedScopes=[]),e.selectedScopes.push(t)}))},onCreate:function(){null!=e.selectedResource&&(e.policy.resources=[e.selectedResource._id]);var t=[];for(i=0;i<e.selectedScopes.length;i++)e.selectedScopes[i].id?t.push(e.selectedScopes[i].id):t.push(e.selectedScopes[i]);e.policy.scopes=t;var r=[];if(e.selectedPolicies)for(i=0;i<e.selectedPolicies.length;i++)r.push(e.selectedPolicies[i].id);e.policy.policies=r,delete e.policy.config},onSaveState:function(t){u.state.selectedScopes=e.selectedScopes,u.state.selectedResource=e.selectedResource,u.state.resourceScopes=e.resourceScopes},onRestoreState:function(t){e.selectedScopes=u.state.selectedScopes,e.selectedResource=u.state.selectedResource,e.resourceScopes=u.state.resourceScopes}},n,l,e)})),module.controller("ResourceServerPolicyUserDetailCtrl",(function(e,t,r,n,l,s){l.onInit({getPolicyType:function(){return"user"},onInit:function(){e.usersUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(e){var r={results:[]};""!=e.term.trim()?s.query({realm:t.current.params.realm,search:e.term.trim(),max:20},(function(t){r.results=t,e.callback(r)})):e.callback(r)},formatResult:function(e,t,r){return e.username}},e.selectedUsers=[],e.selectUser=function(t){if(t&&t.id){for(e.selectedUser=null,i=0;i<e.selectedUsers.length;i++)if(e.selectedUsers[i].id==t.id)return;e.selectedUsers.push(t)}},e.removeFromList=function(e,t){for(i=0;i<angular.copy(e).length;i++)t==e[i]&&e.splice(i,1)}},onInitUpdate:function(r){var n=[];if(r.users){var l=r.users;for(i=0;i<l.length;i++)s.get({realm:t.current.params.realm,userId:l[i]},(function(t){n.push(t),e.selectedUsers=angular.copy(n)}))}e.$watch("selectedUsers",(function(){angular.equals(e.selectedUsers,n)?e.changed=!1:e.changed=!0}),!0)},onUpdate:function(){var t=[];for(i=0;i<e.selectedUsers.length;i++)t.push(e.selectedUsers[i].id);e.policy.users=t,delete e.policy.config},onCreate:function(){var t=[];for(i=0;i<e.selectedUsers.length;i++)t.push(e.selectedUsers[i].id);e.policy.users=t,delete e.policy.config}},r,n,e)})),module.controller("ResourceServerPolicyClientDetailCtrl",(function(e,t,r,i,n,l){n.onInit({getPolicyType:function(){return"client"},onInit:function(){clientSelectControl(e,t.current.params.realm,l),e.selectedClients=[],e.selectClient=function(t){if(t&&t.id){e.selectedClient=null;for(var r=0;r<e.selectedClients.length;r++)if(e.selectedClients[r].id==t.id)return;e.selectedClients.push(t)}},e.removeFromList=function(t){var r=e.selectedClients.indexOf(t);-1!=r&&e.selectedClients.splice(r,1)}},onInitUpdate:function(r){var i=[];if(r.clients)for(var n=r.clients,s=0;s<n.length;s++)l.get({realm:t.current.params.realm,client:n[s]},(function(t){i.push(t),e.selectedClients=angular.copy(i)}));e.$watch("selectedClients",(function(){angular.equals(e.selectedClients,i)?e.changed=!1:e.changed=!0}),!0)},onUpdate:function(){for(var t=[],r=0;r<e.selectedClients.length;r++)t.push(e.selectedClients[r].id);e.policy.clients=t,delete e.policy.config},onInitCreate:function(){var t=[];e.$watch("selectedClients",(function(){angular.equals(e.selectedClients,t)||(e.changed=!0)}),!0)},onCreate:function(){for(var t=[],r=0;r<e.selectedClients.length;r++)t.push(e.selectedClients[r].id);e.policy.clients=t,delete e.policy.config}},r,i,e)})),module.controller("ResourceServerPolicyRoleDetailCtrl",(function(e,t,r,n,l,s,c,o,a){c.onInit({getPolicyType:function(){return"role"},onInit:function(){o.query({realm:t.current.params.realm},(function(t){e.roles=t})),l.query({realm:t.current.params.realm},(function(t){e.clients=t})),e.selectedRoles=[],e.selectRole=function(t){if(t&&t.id){for(e.selectedRole=null,i=0;i<e.selectedRoles.length;i++)if(e.selectedRoles[i].id==t.id)return;e.selectedRoles.push(t);var r=[];if(e.clientRoles){for(i=0;i<e.clientRoles.length;i++)e.clientRoles[i].id!=t.id&&r.push(e.clientRoles[i]);e.clientRoles=r}}},e.removeFromList=function(t){e.clientRoles&&e.selectedClient&&e.selectedClient.id==t.containerId&&e.clientRoles.push(t);var r=e.selectedRoles.indexOf(t);-1!=r&&e.selectedRoles.splice(r,1)},e.selectClient=function(){e.selectedClient?s.query({realm:t.current.params.realm,client:e.selectedClient.id},(function(t){var r=[];for(j=0;j<t.length;j++){var n=!1;for(i=0;i<e.selectedRoles.length;i++)if(e.selectedRoles[i].id==t[j].id){n=!0;break}n||(t[j].container={},t[j].container.name=e.selectedClient.clientId,r.push(t[j]))}e.clientRoles=r})):e.clientRoles=[]}},onInitUpdate:function(r){var n=[];if(r.roles){var l=r.roles;for(i=0;i<l.length;i++)a.get({realm:t.current.params.realm,role:l[i].id},(function(t){for(i=0;i<l.length;i++)l[i].id==t.id&&(t.required=!!l[i].required);for(i=0;i<e.clients.length;i++)e.clients[i].id==t.containerId&&(t.container={},t.container.name=e.clients[i].clientId);n.push(t),e.selectedRoles=angular.copy(n)}))}e.$watch("selectedRoles",(function(){angular.equals(e.selectedRoles,n)?e.changed=!1:e.changed=!0}),!0)},onUpdate:function(){var t=[];for(i=0;i<e.selectedRoles.length;i++){var r={};r.id=e.selectedRoles[i].id,e.selectedRoles[i].required&&(r.required=e.selectedRoles[i].required),t.push(r)}e.policy.roles=t,delete e.policy.config},onCreate:function(){var t=[];for(i=0;i<e.selectedRoles.length;i++){var r={};r.id=e.selectedRoles[i].id,e.selectedRoles[i].required&&(r.required=e.selectedRoles[i].required),t.push(r)}e.policy.roles=t,delete e.policy.config}},r,n,e),e.hasRealmRole=function(){for(i=0;i<e.selectedRoles.length;i++)if(!e.selectedRoles[i].clientRole)return!0;return!1},e.hasClientRole=function(){for(i=0;i<e.selectedRoles.length;i++)if(e.selectedRoles[i].clientRole)return!0;return!1}})),module.controller("ResourceServerPolicyGroupDetailCtrl",(function(e,t,r,n,l,s,c,o,a,u){o.onInit({getPolicyType:function(){return"group"},onInit:function(){e.tree=[],s.query({realm:t.current.params.realm},(function(t){e.groups=t,e.groupList=[{id:"realm",name:u.instant("groups"),subGroups:t}]}));e.getGroupClass=function(e){return"realm"==e.id?"pficon pficon-users":function(e){return"realm"!=e.id&&(!e.subGroups||0==e.subGroups.length)}(e)?"normal":e.subGroups.length&&e.collapsed?"collapsed":e.subGroups.length&&!e.collapsed?"expanded":"collapsed"},e.getSelectedClass=function(t){return t.selected?"selected":e.cutNode&&e.cutNode.id==t.id?"cut":void 0},e.selectGroup=function(t){for(i=0;i<e.selectedGroups.length;i++)if(e.selectedGroups[i].id==t.id)return;"realm"!=t.id?(e.selectedGroups.push({id:t.id,path:t.path}),e.changed=!0):a.error("You must choose a group")},e.extendChildren=function(t){e.changed=!0},e.removeFromList=function(t){var r=e.selectedGroups.indexOf(t);-1!=r&&(e.selectedGroups.splice(r,1),e.changed=!0)}},onInitCreate:function(t){var r=[];e.selectedGroups=angular.copy(r),e.$watch("selectedGroups",(function(){angular.equals(e.selectedGroups,r)?e.changed=o.isNewAssociatedPolicy():e.changed=!0}),!0)},onInitUpdate:function(r){e.selectedGroups=r.groups,angular.forEach(e.selectedGroups,(function(e,r){c.get({realm:t.current.params.realm,groupId:e.id},(function(t){e.path=t.path}))})),e.$watch("selectedGroups",(function(){e.changed&&(angular.equals(e.selectedGroups,selectedGroups)?e.changed=!1:e.changed=!0)}),!0)},onUpdate:function(){e.policy.groups=e.selectedGroups,delete e.policy.config},onCreate:function(){e.policy.groups=e.selectedGroups,delete e.policy.config}},r,n,e)})),module.controller("ResourceServerPolicyJSDetailCtrl",(function(e,t,r,i,n,l,s){n.onInit({getPolicyType:function(){return"js"},onInit:function(){e.readOnly=!s.featureEnabled("UPLOAD_SCRIPTS"),e.initEditor=function(t){t.$blockScrolling=1/0,t.setReadOnly(e.readOnly),t.getSession().setMode("ace/mode/javascript")}},onInitUpdate:function(e){},onUpdate:function(){delete e.policy.config},onInitCreate:function(e){},onCreate:function(){delete e.policy.config}},i,l,e)})),module.controller("ResourceServerPolicyTimeDetailCtrl",(function(e,t,r,i,n,l){function s(){void 0!=e.policy.notBefore&&""==e.policy.notBefore.trim()&&(e.policy.notBefore=null),void 0!=e.policy.notOnOrAfter&&""==e.policy.notOnOrAfter.trim()&&(e.policy.notOnOrAfter=null)}n.onInit({getPolicyType:function(){return"time"},onInit:function(){},onInitUpdate:function(e){e.dayMonth&&(e.dayMonth=parseInt(e.dayMonth)),e.dayMonthEnd&&(e.dayMonthEnd=parseInt(e.dayMonthEnd)),e.month&&(e.month=parseInt(e.month)),e.monthEnd&&(e.monthEnd=parseInt(e.monthEnd)),e.year&&(e.year=parseInt(e.year)),e.yearEnd&&(e.yearEnd=parseInt(e.yearEnd)),e.hour&&(e.hour=parseInt(e.hour)),e.hourEnd&&(e.hourEnd=parseInt(e.hourEnd)),e.minute&&(e.minute=parseInt(e.minute)),e.minuteEnd&&(e.minuteEnd=parseInt(e.minuteEnd))},onUpdate:function(){s(),delete e.policy.config},onInitCreate:function(e){},onCreate:function(){s(),delete e.policy.config}},i,l,e),e.isRequired=function(){var t=e.policy;return!t||!(t.notOnOrAfter||t.notBefore||t.dayMonth||t.month||t.year||t.hour||t.minute)}})),module.controller("ResourceServerPolicyAggregateDetailCtrl",(function(e,t,r,n,l,s,c,o,a){l.onInit({getPolicyType:function(){return"aggregate"},onInit:function(){e.policiesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:n.realm,client:c.id,permission:!1,name:t.term.trim(),max:20,first:0},s.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}}},onInitUpdate:function(r){s.associatedPolicies({realm:t.current.params.realm,client:c.id,id:r.id},(function(t){for(e.selectedPolicies=[],i=0;i<t.length;i++)t[i].text=t[i].name,e.selectedPolicies.push(t[i]);var r=angular.copy(e.selectedPolicies);e.$watch("selectedPolicies",(function(){angular.equals(e.selectedPolicies,r)||(e.changed=!0)}),!0)}))},onUpdate:function(){var t=[];for(i=0;i<e.selectedPolicies.length;i++)t.push(e.selectedPolicies[i].id);e.policy.policies=t,delete e.policy.config},onInitCreate:function(e){a.state.previousPage.name="authz-add-aggregated-policy"},onCreate:function(){var t=[];for(i=0;i<e.selectedPolicies.length;i++)t.push(e.selectedPolicies[i].id);e.policy.policies=t,delete e.policy.config}},n,c,e)})),module.controller("ResourceServerPolicyClientScopeDetailCtrl",(function(e,t,r,n,l,s){s.onInit({getPolicyType:function(){return"client-scope"},onInit:function(){l.query({realm:t.current.params.realm},(function(t){e.clientScopes=t})),e.selectedClientScopes=[],e.selectClientScope=function(t){if(t&&t.id){for(e.selectedClientScope=null,i=0;i<e.selectedClientScopes.length;i++)if(e.selectedClientScopes[i].id==t.id)return;e.selectedClientScopes.push(t)}},e.removeFromList=function(t){var r=e.selectedClientScopes.indexOf(t);-1!=r&&e.selectedClientScopes.splice(r,1)}},onInitUpdate:function(r){var n=[];if(r.clientScopes){var s=r.clientScopes;for(i=0;i<s.length;i++)l.get({realm:t.current.params.realm,clientScope:s[i].id},(function(t){for(i=0;i<s.length;i++)s[i].id==t.id&&(t.required=!!s[i].required);n.push(t),e.selectedClientScopes=angular.copy(n)}))}e.$watch("selectedClientScopes",(function(){angular.equals(e.selectedClientScopes,n)?e.changed=!1:e.changed=!0}),!0)},onUpdate:function(){var t=[];for(i=0;i<e.selectedClientScopes.length;i++){var r={};r.id=e.selectedClientScopes[i].id,e.selectedClientScopes[i].required&&(r.required=e.selectedClientScopes[i].required),t.push(r)}e.policy.clientScopes=t,delete e.policy.config},onCreate:function(){var t=[];for(i=0;i<e.selectedClientScopes.length;i++){var r={};r.id=e.selectedClientScopes[i].id,e.selectedClientScopes[i].required&&(r.required=e.selectedClientScopes[i].required),t.push(r)}e.policy.clientScopes=t,delete e.policy.config}},r,n,e)})),module.service("PolicyController",(function(e,t,r,n,l,s,c,o,a,u,d){var p={isNewAssociatedPolicy:function(){return null!=t.current.params.new_policy},isBackNewAssociatedPolicy:function(){return null!=t.current.params.back},onInit:function(e,m,f,y){y.policyProviders=[],u.query({realm:t.current.params.realm,client:f.id},(function(e){for(i=0;i<e.length;i++)"resource"!=e[i].type&&"scope"!=e[i].type&&y.policyProviders.push(e[i])})),a.state&&p.isBackNewAssociatedPolicy()||p.isNewAssociatedPolicy()||(a.state={}),a.state.previousPage||(a.state.previousPage={}),y.policyViewState=a,y.addPolicy=function(t){a.state.policy=y.policy,e.onSaveState&&e.onSaveState(y.policy),y.selectedPolicies&&(a.state.selectedPolicies=y.selectedPolicies);var i=window.location.href.substring(window.location.href.indexOf("/realms"));-1==i.indexOf("back=true")&&(i=i+(-1==i.indexOf("?")?"?":"&")+"back=true"),a.state.previousUrl=i,r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/policy/"+t.type+"/create?new_policy=true")},y.detailPolicy=function(t){a.state.policy=y.policy,e.onSaveState&&e.onSaveState(y.policy),y.selectedPolicies&&(a.state.selectedPolicies=y.selectedPolicies);var i=window.location.href.substring(window.location.href.indexOf("/realms"));-1==i.indexOf("back=true")&&(i=i+(-1==i.indexOf("?")?"?":"&")+"back=true"),a.state.previousUrl=i,r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/policy/"+t.type+"/"+t.id+"?new_policy=true")},y.removePolicy=function(e,t){for(i=0;i<angular.copy(e).length;i++)t.id==e[i].id&&e.splice(i,1)},y.selectPolicy=function(e){if(e&&e.id){for(y.selectedPolicies||(y.selectedPolicies=[]),y.selectedPolicy=null,i=0;i<y.selectedPolicies.length;i++)if(y.selectedPolicies[i].id==e.id)return;y.selectedPolicies.push(e)}},y.createNewPolicy=function(){y.showNewPolicy=!0},y.cancelCreateNewPolicy=function(){y.showNewPolicy=!1},y.historyBackOnSaveOrCancel=p.isNewAssociatedPolicy(),e.isPermission||(e.isPermission=function(){return!1});var h=l;e.isPermission()&&(h=s),y.realm=m,y.client=f,y.decisionStrategies=["AFFIRMATIVE","UNANIMOUS","CONSENSUS"],y.logics=["POSITIVE","NEGATIVE"],e.onInit();var g=this;n.get({realm:t.current.params.realm,client:f.id},(function(i){if(y.server=i,t.current.params.id)h.get({realm:m.realm,client:f.id,type:e.getPolicyType(),id:t.current.params.id},(function(i){y.originalPolicy=i;var n=angular.copy(i);y.changed=y.historyBackOnSaveOrCancel||p.isBackNewAssociatedPolicy(),y.policy=angular.copy(n),p.isBackNewAssociatedPolicy()?(e.onRestoreState&&e.onRestoreState(y.policy),g.restoreState(y)):e.onInitUpdate&&e.onInitUpdate(y.policy),y.$watch("policy",(function(){angular.equals(y.policy,n)||(y.changed=!0)}),!0),y.save=function(){g.checkNameAvailability((function(){e.onUpdate&&e.onUpdate(),h.update({realm:m.realm,client:f.id,type:y.policy.type,id:y.policy.id},y.policy,(function(){e.isPermission()?(y.historyBackOnSaveOrCancel?r.url(a.state.previousUrl):r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/permission/"+y.policy.type+"/"+y.policy.id),t.reload(),o.success("The permission has been updated.")):(y.historyBackOnSaveOrCancel?r.url(a.state.previousUrl):r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/policy/"+y.policy.type+"/"+y.policy.id),t.reload(),o.success("The policy has been updated."))}))}))},y.reset=function(){if(y.historyBackOnSaveOrCancel)r.url(a.state.previousUrl);else{var t=angular.copy(i);e.onInitUpdate&&e.onInitUpdate(t),y.policy=angular.copy(t),y.changed=!1}}})),y.remove=function(){Policies.delete(l,t.current.params.realm,f,y,c,r,o,t,e.isPermission())};else{y.create=!0;var n={};n.type=e.getPolicyType(),n.config={},n.logic="POSITIVE",n.decisionStrategy="UNANIMOUS",y.changed=y.historyBackOnSaveOrCancel||p.isBackNewAssociatedPolicy(),null!=d.state&&null!=d.state.previousUrl&&(y.previousUrl=d.state.previousUrl,a.state.rootUrl=y.previousUrl,d.state={}),y.policy=angular.copy(n),y.$watch("policy",(function(){angular.equals(y.policy,n)||(y.changed=!0)}),!0),p.isBackNewAssociatedPolicy()?(e.onRestoreState&&e.onRestoreState(y.policy),g.restoreState(y)):e.onInitCreate&&e.onInitCreate(n),y.save=function(){g.checkNameAvailability((function(){e.onCreate&&e.onCreate(),h.save({realm:m.realm,client:f.id,type:y.policy.type},y.policy,(function(t){e.isPermission()?(y.historyBackOnSaveOrCancel||null!=a.state.rootUrl?null!=a.state.rootUrl?r.url(a.state.rootUrl):(a.state.newPolicyName=y.policy.name,r.url(a.state.previousUrl)):r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/permission/"+y.policy.type+"/"+t.id),o.success("The permission has been created.")):(y.historyBackOnSaveOrCancel?(a.state.newPolicyName=y.policy.name,r.url(a.state.previousUrl)):r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/policy/"+y.policy.type+"/"+t.id),o.success("The policy has been created."))}))}))},y.reset=function(){e.isPermission()?y.historyBackOnSaveOrCancel||null!=a.state.rootUrl?null!=a.state.rootUrl?r.url(a.state.rootUrl):r.url(a.state.previousUrl):r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/permission/"):y.historyBackOnSaveOrCancel?r.url(a.state.previousUrl):r.url("/realms/"+m.realm+"/clients/"+f.id+"/authz/resource-server/policy/")}}})),y.checkNewNameAvailability=function(){g.checkNameAvailability((function(){}))},this.checkNameAvailability=function(e){y.policy.name&&0!=y.policy.name.trim().length&&l.search({realm:t.current.params.realm,client:f.id,name:y.policy.name},(function(t){t&&t.id&&t.id!=y.policy.id?o.error("Name already in use by another policy or permission, please choose another one."):e()}))},this.restoreState=function(e){e.policy.name=a.state.policy.name,e.policy.description=a.state.policy.description,e.policy.decisionStrategy=a.state.policy.decisionStrategy,e.policy.logic=a.state.policy.logic,e.selectedPolicies=a.state.selectedPolicies,e.selectedPolicies||(e.selectedPolicies=[]),e.changed=!0;var t=a.state.previousPage;if(a.state.newPolicyName)l.query({realm:m.realm,client:f.id,permission:!1,name:a.state.newPolicyName,max:20,first:0},(function(r){for(i=0;i<r.length;i++)r[i].name==a.state.newPolicyName&&(r[i].text=r[i].name,e.selectedPolicies.push(r[i]));var n=a.state.rootUrl;a.state={},a.state.previousPage=t,a.state.rootUrl=n}));else{var r=a.state.rootUrl;a.state={},a.state.previousPage=t,a.state.rootUrl=r}}}};return p})),module.controller("PolicyEvaluateCtrl",(function(e,t,r,n,l,s,c,o,a,u,d,p,m){e.realm=l,e.client=a,e.clients=s,e.roles=c,e.authzRequest={},e.authzRequest.resources=[],e.authzRequest.context={},e.authzRequest.context.attributes={},e.authzRequest.roleIds=[],e.resultUrl=resourceUrl+"/partials/authz/policy/resource-server-policy-evaluate-result.html",e.addContextAttribute=function(){e.newContextAttribute.value&&""!=e.newContextAttribute.value?(e.authzRequest.context.attributes[e.newContextAttribute.key]=e.newContextAttribute.value,delete e.newContextAttribute):m.error("You must provide a value to a context attribute.")},e.removeContextAttribute=function(t){delete e.authzRequest.context.attributes[t]},e.getContextAttribute=function(t){for(i=0;i<e.defaultContextAttributes.length;i++)if(e.defaultContextAttributes[i].key==t)return e.defaultContextAttributes[i];return e.authzRequest.context.attributes[t]},e.getContextAttributeName=function(t){var r=e.getContextAttribute(t);return r.name?r.name:t},e.defaultContextAttributes=[{key:"custom",name:"Custom Attribute...",custom:!0},{key:"kc.identity.authc.method",name:"Authentication Method",values:[{key:"pwd",name:"Password"},{key:"otp",name:"One-Time Password"},{key:"kbr",name:"Kerberos"}]},{key:"kc.realm.name",name:"Realm"},{key:"kc.time.date_time",name:"Date/Time (MM/dd/yyyy hh:mm:ss)"},{key:"kc.client.network.ip_address",name:"Client IPv4 Address"},{key:"kc.client.network.host",name:"Client Host"},{key:"kc.client.user_agent",name:"Client/User Agent"}],e.isDefaultContextAttribute=function(){return!e.newContextAttribute||!e.newContextAttribute.custom&&!e.getContextAttribute(e.newContextAttribute.key).custom},e.selectDefaultContextAttribute=function(){e.newContextAttribute=angular.copy(e.newContextAttribute)},e.setApplyToResourceType=function(){delete e.newResource,e.authzRequest.resources=[]},e.addResource=function(){var t=angular.copy(e.newResource);t||(t={}),delete t.text,(!e.newScopes||null!=t._id&&e.newScopes.length>0&&e.newScopes[0].id)&&(e.newScopes=[]);var r=[];for(i=0;i<e.newScopes.length;i++)e.newScopes[i].name?r.push(e.newScopes[i].name):r.push(e.newScopes[i]);t.scopes=r,e.authzRequest.resources.push(t),delete e.newResource,delete e.newScopes},e.removeResource=function(t){e.authzRequest.resources.splice(t,1)},e.resolveScopes=function(){e.newResource._id&&(e.newResource.scopes=[],e.scopes=[],u.scopes({realm:r.current.params.realm,client:a.id,rsrid:e.newResource._id},(function(t){e.scopes=t})))},e.reevaluate=function(){e.authzRequest.entitlements?e.entitlements():e.save()},e.showAuthzData=function(){e.showRpt=!0},e.save=function(){if(e.authzRequest.entitlements=!1,e.applyResourceType){e.newResource||(e.newResource={}),(!e.newScopes||null!=e.newResource._id&&e.newScopes.length>0&&e.newScopes[0].id)&&(e.newScopes=[]);var n=angular.copy(e.newScopes);for(i=0;i<n.length;i++)delete n[i].text;e.authzRequest.resources[0].scopes=n}t.post(authUrl+"/admin/realms/"+r.current.params.realm+"/clients/"+a.id+"/authz/resource-server/policy/evaluate",e.authzRequest).then((function(t){e.evaluationResult=t.data,e.showResultTab()}))},e.entitlements=function(){e.authzRequest.entitlements=!0,t.post(authUrl+"/admin/realms/"+r.current.params.realm+"/clients/"+a.id+"/authz/resource-server/policy/evaluate",e.authzRequest).then((function(t){e.evaluationResult=t.data,e.showResultTab()}))},e.showResultTab=function(){e.showResult=!0,e.showRpt=!1},e.showRequestTab=function(){e.showResult=!1,e.showRpt=!1},e.usersUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(e){var t={results:[]};""!=e.term.trim()?p.query({realm:r.current.params.realm,search:e.term.trim(),max:20},(function(r){t.results=r,e.callback(t)})):e.callback(t)},formatResult:function(e,t,r){return e.text=e.username,e.username}},e.resourcesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,id:function(e){return e._id},query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:l.realm,client:a.id,name:t.term.trim(),deep:!1,max:20,first:0},u.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},e.scopesUiSelect={minimumInputLength:1,delay:500,allowClear:!0,query:function(t){var r={results:[]};""!=t.term.trim()?(e.query={realm:l.realm,client:a.id,name:t.term.trim(),deep:!1,max:20,first:0},d.query(e.query,(function(e){r.results=e,t.callback(r)}))):t.callback(r)},formatResult:function(e,t,r){return e.text=e.name,e.name}},o.get({realm:r.current.params.realm,client:a.id},(function(t){e.server=t})),e.selectUser=function(t){if(!t||!t.id)return e.selectedUser=null,void(e.authzRequest.userId="");e.authzRequest.userId=t.id},e.reset=function(){e.authzRequest=angular.copy(authzRequest),e.changed=!1}})),getManageClientId=function(e){return e.realm==masterRealm?"master-realm":"realm-management"},module.controller("RealmRolePermissionsCtrl",(function(e,t,r,i,n,l,s,c,o,a,u){console.log("RealmRolePermissionsCtrl"),e.role=l,e.realm=n,e.remove=function(){u.remove(e.role,n,a,i,o)},s.get({realm:n.realm,role:l.id},(function(t){e.permissions=t,e.$watch("permissions.enabled",(function(t,r){if(t!=r){var i={enabled:e.permissions.enabled};e.permissions=s.update({realm:n.realm,role:l.id},i)}}),!0)})),c.query({realm:n.realm,clientId:getManageClientId(n)},(function(t){e.realmManagementClientId=t[0].id}))})),module.controller("ClientRolePermissionsCtrl",(function(e,t,r,i,n,l,s,c,o,c,a){console.log("RealmRolePermissionsCtrl"),e.client=l,e.role=s,e.realm=n,o.get({realm:n.realm,role:s.id},(function(t){e.permissions=t,e.$watch("permissions.enabled",(function(t,r){if(t!=r){var i={enabled:e.permissions.enabled};e.permissions=o.update({realm:n.realm,role:s.id},i)}}),!0)})),c.query({realm:n.realm,clientId:getManageClientId(n)},(function(t){e.realmManagementClientId=t[0].id}))})),module.controller("UsersPermissionsCtrl",(function(e,t,r,i,n,l,s,c){console.log("UsersPermissionsCtrl"),e.realm=n;l.get({realm:n.realm},(function(t){e.permissions=t,e.$watch("permissions.enabled",(function(t,r){if(t!=r){var i={enabled:e.permissions.enabled};e.permissions=l.update({realm:n.realm},i)}}),!0)})),s.query({realm:n.realm,clientId:getManageClientId(n)},(function(t){e.realmManagementClientId=t[0].id}))})),module.controller("ClientPermissionsCtrl",(function(e,t,r,i,n,l,s,c,o){e.client=l,e.realm=n,c.get({realm:n.realm,client:l.id},(function(t){e.permissions=t,e.$watch("permissions.enabled",(function(t,r){if(t!=r){var i={enabled:e.permissions.enabled};e.permissions=c.update({realm:n.realm,client:l.id},i)}}),!0)})),s.query({realm:n.realm,clientId:getManageClientId(n)},(function(t){e.realmManagementClientId=t[0].id}))})),module.controller("IdentityProviderPermissionCtrl",(function(e,t,r,i,n,l,s,c,o){e.identityProvider=l,e.realm=n,c.get({realm:n.realm,alias:l.alias},(function(t){e.permissions=t,e.$watch("permissions.enabled",(function(t,r){if(t!=r){var i={enabled:e.permissions.enabled};e.permissions=c.update({realm:n.realm,alias:l.alias},i)}}),!0)})),s.query({realm:n.realm,clientId:getManageClientId(n)},(function(t){e.realmManagementClientId=t[0].id}))})),module.controller("GroupPermissionsCtrl",(function(e,t,r,i,n,l,s,c,o){e.group=l,e.realm=n,c.query({realm:n.realm,clientId:getManageClientId(n)},(function(t){e.realmManagementClientId=t[0].id})),s.get({realm:n.realm,group:l.id},(function(t){e.permissions=t,e.$watch("permissions.enabled",(function(t,r){if(t!=r){var i={enabled:e.permissions.enabled};e.permissions=s.update({realm:n.realm,group:l.id},i)}}),!0)}))}));