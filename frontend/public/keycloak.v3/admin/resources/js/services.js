"use strict";var module=angular.module("keycloak.services",["ngResource","ngRoute"]);function clientSelectControl(e,r,t){e.clientsUiSelect={minimumInputLength:0,delay:500,allowClear:!0,query:function(e){var a={results:[]};t.query({realm:r,search:!0,clientId:e.term.trim(),max:20},(function(r){a.results=r,e.callback(a)}))},formatResult:function(e,r,t){return e.text=e.clientId,e.clientId}}}function roleControl(e,r,t,a,l,n,o,i,s,m,c,u,d,p,f){if(e.$watch((function(){return u.path()}),(function(){e.path=u.path().substring(1).split("/")})),e.$watch("role",(function(){angular.equals(e.role,a)||(e.changed=!0)}),!0),e.update=function(){i.update({realm:t.realm,role:a.id},e.role,(function(){e.changed=!1,a=angular.copy(e.role),d.success("Your changes have been saved to the role.")}))},e.reset=function(){e.role=angular.copy(a),e.changed=!1},a.id){e.compositeSwitch=a.composite,e.compositeSwitchDisabled=a.composite,e.realmRoles=angular.copy(l),e.selectedRealmRoles=[],e.selectedRealmMappings=[],e.realmMappings=[],e.clientRoles=[],e.selectedClientRoles=[],e.selectedClientMappings=[],e.clientMappings=[];for(var h=0;h<e.realmRoles.length;h++)if(e.realmRoles[h].id==a.id){var g=e.realmRoles[h],y=e.realmRoles.indexOf(g);e.realmRoles.splice(y,1);break}clientSelectControl(e,r.current.params.realm,n),e.selectedClient=null,e.realmMappings=s.query({realm:t.realm,role:a.id},(function(){for(var r=0;r<e.realmMappings.length;r++)for(var t=e.realmMappings[r],a=0;a<e.realmRoles.length;a++){var l=e.realmRoles[a];if(l.id==t.id){var n=e.realmRoles.indexOf(l);if(-1!=n){e.realmRoles.splice(n,1);break}}}})),e.addRealmRole=function(){e.compositeSwitchDisabled=!0,e.selectedRealmRolesToAdd=JSON.parse("["+e.selectedRealmRoles+"]"),c.post(authUrl+"/admin/realms/"+t.realm+"/roles-by-id/"+a.id+"/composites",e.selectedRealmRolesToAdd).then((function(){for(var r=0;r<e.selectedRealmRolesToAdd.length;r++){var t=e.selectedRealmRolesToAdd[r],a=f.findIndexById(e.realmRoles,t.id);-1!=a&&(e.realmRoles.splice(a,1),e.realmMappings.push(t))}e.selectedRealmRoles=[],e.selectedRealmRolesToAdd=[],d.success("Role added to composite.")}))},e.deleteRealmRole=function(){e.compositeSwitchDisabled=!0,e.selectedRealmMappingsToRemove=JSON.parse("["+e.selectedRealmMappings+"]"),c.delete(authUrl+"/admin/realms/"+t.realm+"/roles-by-id/"+a.id+"/composites",{data:e.selectedRealmMappingsToRemove,headers:{"content-type":"application/json"}}).then((function(){for(var r=0;r<e.selectedRealmMappingsToRemove.length;r++){var t=e.selectedRealmMappingsToRemove[r],a=f.findIndexById(e.realmMappings,t.id);-1!=a&&(e.realmMappings.splice(a,1),e.realmRoles.push(t))}e.selectedRealmMappings=[],e.selectedRealmMappingsToRemove=[],d.success("Role removed from composite.")}))},e.addClientRole=function(){e.compositeSwitchDisabled=!0,e.selectedClientRolesToAdd=JSON.parse("["+e.selectedClientRoles+"]"),c.post(authUrl+"/admin/realms/"+t.realm+"/roles-by-id/"+a.id+"/composites",e.selectedClientRolesToAdd).then((function(){for(var r=0;r<e.selectedClientRolesToAdd.length;r++){var t=e.selectedClientRolesToAdd[r],a=f.findIndexById(e.clientRoles,t.id);-1!=a&&(e.clientRoles.splice(a,1),e.clientMappings.push(t))}e.selectedClientRoles=[],e.selectedClientRolesToAdd=[],d.success("Client role added.")}))},e.deleteClientRole=function(){e.compositeSwitchDisabled=!0,e.selectedClientMappingsToRemove=JSON.parse("["+e.selectedClientMappings+"]"),c.delete(authUrl+"/admin/realms/"+t.realm+"/roles-by-id/"+a.id+"/composites",{data:e.selectedClientMappingsToRemove,headers:{"content-type":"application/json"}}).then((function(){for(var r=0;r<e.selectedClientMappingsToRemove.length;r++){var t=e.selectedClientMappingsToRemove[r],a=f.findIndexById(e.clientMappings,t.id);-1!=a&&(e.clientMappings.splice(a,1),e.clientRoles.push(t))}e.selectedClientMappings=[],e.selectedClientMappingsToRemove=[],d.success("Client role removed.")}))},e.changeClient=function(r){console.log("selected client: ",r),r&&r.id?(e.selectedClient=r,e.clientRoles=o.query({realm:t.realm,client:r.id},(function(){e.clientMappings=m.query({realm:t.realm,role:a.id,client:r.id},(function(){for(var r=0;r<e.clientMappings.length;r++)for(var t=e.clientMappings[r],a=0;a<e.clientRoles.length;a++){var l=e.clientRoles[a];if(l.id==t.id){var n=e.clientRoles.indexOf(l);if(-1!=n){e.clientRoles.splice(n,1);break}}}}));for(var l=0;l<e.clientRoles.length;l++)if(e.clientRoles[l]==a.id){var n=e.clientRoles[l],o=e.clientRoles.indexof(n);e.clientRoles.splice(o,1);break}}))):e.selectedClient=null}}}function buildClientEvaluateGenerateExampleUrl(e){var r=authUrl+"/admin/realms/:realm/clients/:client/evaluate-scopes/"+e+"?scope=:scopeParam&userId=:userId";return{url:function(e){return r.replace(":realm",e.realm).replace(":client",e.client).replace(":scopeParam",e.scopeParam).replace(":userId",e.userId)}}}module.service("Dialog",(function(e,r){var t={},a=function(r,t,a,l){return e.open({templateUrl:resourceUrl+l,controller:function(e,r,t,a,l){e.title=t,e.message=a,e.btns=l,e.ok=function(){r.close()},e.cancel=function(){r.dismiss("cancel")}},resolve:{title:function(){return r},message:function(){return t},btns:function(){return a}}}).result},l=function(e){var r=document.createElement("div");return r.appendChild(document.createTextNode(e)),r.innerHTML};return t.confirmDelete=function(e,a,n){var o=r.instant("dialogs.delete.title",{type:l(a.charAt(0).toUpperCase()+a.slice(1))}),i=r.instant("dialogs.delete.message",{type:a,name:e}),s=r.instant("dialogs.delete.confirm");t.confirmWithButtonText(o,i,s,n)},t.confirmGenerateKeys=function(e,r,t){a("Generate new keys for realm","Are you sure you want to permanently generate new keys for "+e+"?",{ok:{label:"Generate Keys",cssClass:"btn btn-danger"},cancel:{label:"Cancel",cssClass:"btn btn-default"}},"/templates/kc-modal.html").then(t)},t.confirm=function(e,r,a,l){t.confirmWithButtonText(e,r,e,a,l)},t.confirmWithButtonText=function(e,t,l,n,o){var i={ok:{label:l,cssClass:"btn btn-danger"},cancel:{label:r.instant("dialogs.cancel"),cssClass:"btn btn-default"}};a(e,t,i,"/templates/kc-modal.html").then(n,o)},t.message=function(e,t,l,n){var o={ok:{label:r.instant("dialogs.ok"),cssClass:"btn btn-default"}};a(e,t,o,"/templates/kc-modal-message.html").then(l,n)},t.open=function(e,r,t,l,n){a(e,r,t,"/templates/kc-modal.html").then(l,n)},t})),module.service("CopyDialog",(function(e){var r={open:function(r,t,a){e.open({templateUrl:resourceUrl+"/templates/kc-copy.html",controller:function(e,r,l){e.title=l,e.name={value:"Copy of "+t},e.ok=function(){console.log("ok with name: "+e.name),r.close(),a(e.name.value)},e.cancel=function(){r.dismiss("cancel")}},resolve:{title:function(){return r}}})}};return r})),module.service("UpdateDialog",(function(e){var r={open:function(r,t,a,l){e.open({templateUrl:resourceUrl+"/templates/kc-edit.html",controller:function(e,r,n){e.title=n,e.name={value:t},e.description={value:a},e.ok=function(){console.log("ok with name: "+e.name+"and description: "+e.description),r.close(),l(e.name.value,e.description.value)},e.cancel=function(){r.dismiss("cancel")}},resolve:{title:function(){return r}}})}};return r})),module.factory("Notifications",(function(e,r,t){var a={current:{display:!1}};return a.current.remove=function(){a.scheduled&&(r.cancel(a.scheduled),delete a.scheduled),delete a.current.type,delete a.current.header,delete a.current.message,a.current.display=!1,console.debug("Remove message")},e.notification=a.current,a.message=function(e,t,l){a.current.remove(),a.current.type=e,a.current.header=t,a.current.message=l,a.current.display=!0,a.scheduled=r((function(){a.current.remove()}),5e3),console.debug("Added message")},a.info=function(e){a.message("info",t.instant("notifications.info.header"),e)},a.success=function(e){a.message("success",t.instant("notifications.success.header"),e)},a.error=function(e){a.message("danger",t.instant("notifications.error.header"),e)},a.warn=function(e){a.message("warning",t.instant("notifications.warn.header"),e)},a})),module.factory("ComponentUtils",(function(){var e={sortGroups:function e(r,t){return t.sort((function(e,t){return e[r]<t[r]?-1:e[r]>t[r]?1:0})),t.forEach((function(t,a){t.subGroups&&e(r,t.subGroups)})),t},findIndexById:function(e,r){for(var t=0;t<e.length;t++)if(e[t].id===r)return t;return-1},convertAllMultivaluedStringValuesToList:function(e,r){if(e)for(var t=0;t<e.length;t++){var a=e[t];if("MultivaluedString"===a.type){var l=r[a.name];null==l&&(l=[],r[a.name]=l),"string"===typeof l&&(l=l.split("##"),r[a.name]=l)}}},convertAllListValuesToMultivaluedString:function(e,r){if(e)for(var t=0;t<e.length;t++){var a=e[t];if("MultivaluedString"===a.type){var l=r[a.name];if(null!=l){if(l.length>0)""===l[l.length-1]&&(console.log("Remove empty value from config property: "+a.name),l.splice(l.length-1,1));var n=l.join("##");r[a.name]=n}}}},addLastEmptyValueToMultivaluedLists:function(e,r){if(e)for(var t=0;t<e.length;t++){var a=e[t];if("MultivaluedString"===a.type){var l=r[a.name];null==l&&(l=[],r[a.name]=l),(0==l.length||l[l.length-1].length>0)&&l.push("")}}},removeLastEmptyValue:function(e){for(var r in e){var t=e[r];if(t&&t.length>0)""===t[t.length-1]&&(console.log("Remove empty value from config property: "+r),t.splice(t.length-1,1))}},addMvOptionsToMultivaluedLists:function(e){if(e)for(var r=0;r<e.length;r++){var t=e[r];"MultivaluedList"===t.type&&(t.mvOptions={multiple:!0,simple_tags:!0,tags:angular.copy(t.options)})}}};return e})),module.factory("Realm",(function(e){return e(authUrl+"/admin/realms/:id",{id:"@realm"},{update:{method:"PUT"},create:{method:"POST",params:{id:""}}})})),module.factory("RealmKeys",(function(e){return e(authUrl+"/admin/realms/:id/keys",{id:"@realm"})})),module.factory("RealmSpecificLocales",(function(e){return e(authUrl+"/admin/realms/:id/localization",{id:"@realm"},{get:{method:"GET",isArray:!0}})})),module.factory("RealmSpecificLocalizationTexts",(function(e){return e(authUrl+"/admin/realms/:id/localization/:locale",{id:"@realm",locale:"@locale"})})),module.factory("RealmSpecificLocalizationText",(function(e){return e(authUrl+"/admin/realms/:realm/localization/:locale/:key",{realm:"@realm",locale:"@locale",key:"@key"},{get:{method:"GET",transformResponse:function(e){return{content:e}}},save:{method:"PUT",headers:{"Content-Type":"text/plain;charset=utf-8"}}})})),module.factory("RealmEventsConfig",(function(e){return e(authUrl+"/admin/realms/:id/events/config",{id:"@realm"},{update:{method:"PUT"}})})),module.factory("RealmEvents",(function(e){return e(authUrl+"/admin/realms/:id/events",{id:"@realm"})})),module.factory("RealmAdminEvents",(function(e){return e(authUrl+"/admin/realms/:id/admin-events",{id:"@realm"})})),module.factory("BruteForce",(function(e){return e(authUrl+"/admin/realms/:realm/attack-detection/brute-force/users",{realm:"@realm"})})),module.factory("BruteForceUser",(function(e){return e(authUrl+"/admin/realms/:realm/attack-detection/brute-force/users/:userId",{realm:"@realm",userId:"@userId"})})),module.factory("RequiredActions",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/required-actions/:alias",{realm:"@realm",alias:"@alias"},{update:{method:"PUT"}})})),module.factory("RequiredActionRaisePriority",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/required-actions/:alias/raise-priority",{realm:"@realm",alias:"@alias"})})),module.factory("RequiredActionLowerPriority",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/required-actions/:alias/lower-priority",{realm:"@realm",alias:"@alias"})})),module.factory("UnregisteredRequiredActions",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/unregistered-required-actions",{realm:"@realm"})})),module.factory("RegisterRequiredAction",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/register-required-action",{realm:"@realm"})})),module.factory("RealmLDAPConnectionTester",(function(e,r){return e(authUrl+"/admin/realms/:realm/testLDAPConnection",{realm:"@realm"})})),module.factory("RealmSMTPConnectionTester",(function(e,r){return e(authUrl+"/admin/realms/:realm/testSMTPConnection",{realm:"@realm"})})),module.service("ServerInfo",(function(e,r,t){var a={},l=r.defer();function n(e,r){angular.copy(e,r),r.listProviderIds=function(e){var t=r.providers[e].providers,a=Object.keys(t);return a.sort((function(e,r){var a,l;return t[e].order!=t[r].order?(a=t[r].order,l=t[e].order):(a=e,l=r),a<l?-1:a>l?1:0})),a},r.featureEnabled=function(e){return-1==r.profileInfo.disabledFeatures.indexOf(e)}}return t.get(authUrl+"/admin/serverinfo").then((function(e){n(e.data,a),l.resolve(a)})),{get:function(){return a},reload:function(){t.get(authUrl+"/admin/serverinfo").then((function(e){n(e.data,a)}))},promise:l.promise}})),module.factory("ClientInitialAccess",(function(e){return e(authUrl+"/admin/realms/:realm/clients-initial-access/:id",{realm:"@realm",id:"@id"})})),module.factory("ClientProtocolMapper",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/protocol-mappers/models/:id",{realm:"@realm",client:"@client",id:"@id"},{update:{method:"PUT"}})})),module.factory("ClientScopeProtocolMapper",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/protocol-mappers/models/:id",{realm:"@realm",clientScope:"@clientScope",id:"@id"},{update:{method:"PUT"}})})),module.factory("User",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId",{realm:"@realm",userId:"@userId"},{update:{method:"PUT"}})})),module.service("UserSearchState",(function(){this.isFirstSearch=!0,this.query={max:20,first:0}})),module.service("ClientListSearchState",(function(){this.isFirstSearch=!0,this.query={max:20,first:0,search:!0}})),module.service("LastFlowSelected",(function(){this.alias=null})),module.service("RealmRoleRemover",(function(){this.remove=function(e,r,t,a,l){t.confirmDelete(e.name,"role",(function(){e.$remove({realm:r.realm,role:e.id},(function(){a.url("/realms/"+r.realm+"/roles"),l.success("The role has been deleted.")}))}))}})),module.factory("UserSessionStats",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/session-stats",{realm:"@realm",user:"@user"})})),module.factory("UserSessions",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/sessions",{realm:"@realm",user:"@user"})})),module.factory("UserOfflineSessions",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/offline-sessions/:client",{realm:"@realm",user:"@user",client:"@client"})})),module.factory("UserSessionLogout",(function(e){return e(authUrl+"/admin/realms/:realm/sessions/:session",{realm:"@realm",session:"@session"})})),module.factory("UserLogout",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/logout",{realm:"@realm",user:"@user"})})),module.factory("UserFederatedIdentities",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/federated-identity",{realm:"@realm",user:"@user"})})),module.factory("UserFederatedIdentity",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/federated-identity/:provider",{realm:"@realm",user:"@user",provider:"@provider"})})),module.factory("UserConsents",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/consents/:client",{realm:"@realm",user:"@user",client:"@client"})})),module.factory("UserImpersonation",(function(e){return e(authUrl+"/admin/realms/:realm/users/:user/impersonation",{realm:"@realm",user:"@user"})})),module.factory("UserCredentials",(function(e){var r={};return r.getCredentials=e(authUrl+"/admin/realms/:realm/users/:userId/credentials",{realm:"@realm",userId:"@userId"}).query,r.getConfiguredUserStorageCredentialTypes=e(authUrl+"/admin/realms/:realm/users/:userId/configured-user-storage-credential-types",{realm:"@realm",userId:"@userId"}).query,r.deleteCredential=e(authUrl+"/admin/realms/:realm/users/:userId/credentials/:credentialId",{realm:"@realm",userId:"@userId",credentialId:"@credentialId"}).delete,r.updateCredentialLabel=e(authUrl+"/admin/realms/:realm/users/:userId/credentials/:credentialId/userLabel",{realm:"@realm",userId:"@userId",credentialId:"@credentialId"},{update:{method:"PUT",headers:{"Content-Type":"text/plain;charset=utf-8"},transformRequest:function(e,r){return e.userLabel}}}).update,r.resetPassword=e(authUrl+"/admin/realms/:realm/users/:userId/reset-password",{realm:"@realm",userId:"@userId"},{update:{method:"PUT"}}).update,r.removeTotp=e(authUrl+"/admin/realms/:realm/users/:userId/remove-totp",{realm:"@realm",userId:"@userId"},{update:{method:"PUT"}}).update,r.disableCredentialTypes=e(authUrl+"/admin/realms/:realm/users/:userId/disable-credential-types",{realm:"@realm",userId:"@userId"},{update:{method:"PUT"}}).update,r.moveCredentialAfter=e(authUrl+"/admin/realms/:realm/users/:userId/credentials/:credentialId/moveAfter/:newPreviousCredentialId",{realm:"@realm",userId:"@userId",credentialId:"@credentialId",newPreviousCredentialId:"@newPreviousCredentialId"},{update:{method:"POST"}}).update,r.moveToFirst=e(authUrl+"/admin/realms/:realm/users/:userId/credentials/:credentialId/moveToFirst",{realm:"@realm",userId:"@userId",credentialId:"@credentialId"},{update:{method:"POST"}}).update,r})),module.factory("UserExecuteActionsEmail",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/execute-actions-email",{realm:"@realm",userId:"@userId",lifespan:"@lifespan"},{update:{method:"PUT"}})})),module.factory("RealmRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/role-mappings/realm",{realm:"@realm",userId:"@userId"})})),module.factory("CompositeRealmRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/role-mappings/realm/composite",{realm:"@realm",userId:"@userId"})})),module.factory("AvailableRealmRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/role-mappings/realm/available",{realm:"@realm",userId:"@userId"})})),module.factory("ClientRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/role-mappings/clients/:client",{realm:"@realm",userId:"@userId",client:"@client"})})),module.factory("AvailableClientRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/role-mappings/clients/:client/available",{realm:"@realm",userId:"@userId",client:"@client"})})),module.factory("CompositeClientRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/role-mappings/clients/:client/composite",{realm:"@realm",userId:"@userId",client:"@client"})})),module.factory("ClientRealmScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/scope-mappings/realm",{realm:"@realm",client:"@client"})})),module.factory("ClientAvailableRealmScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/scope-mappings/realm/available",{realm:"@realm",client:"@client"})})),module.factory("ClientCompositeRealmScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/scope-mappings/realm/composite",{realm:"@realm",client:"@client"})})),module.factory("ClientClientScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/scope-mappings/clients/:targetClient",{realm:"@realm",client:"@client",targetClient:"@targetClient"})})),module.factory("ClientAvailableClientScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/scope-mappings/clients/:targetClient/available",{realm:"@realm",client:"@client",targetClient:"@targetClient"})})),module.factory("ClientCompositeClientScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/scope-mappings/clients/:targetClient/composite",{realm:"@realm",client:"@client",targetClient:"@targetClient"})})),module.factory("RealmRoles",(function(e){return e(authUrl+"/admin/realms/:realm/roles",{realm:"@realm"})})),module.factory("RoleRealmComposites",(function(e){return e(authUrl+"/admin/realms/:realm/roles-by-id/:role/composites/realm",{realm:"@realm",role:"@role"})})),module.factory("RealmPushRevocation",(function(e){return e(authUrl+"/admin/realms/:realm/push-revocation",{realm:"@realm"})})),module.factory("RealmClearUserCache",(function(e){return e(authUrl+"/admin/realms/:realm/clear-user-cache",{realm:"@realm"})})),module.factory("RealmClearRealmCache",(function(e){return e(authUrl+"/admin/realms/:realm/clear-realm-cache",{realm:"@realm"})})),module.factory("RealmClearKeysCache",(function(e){return e(authUrl+"/admin/realms/:realm/clear-keys-cache",{realm:"@realm"})})),module.factory("RealmSessionStats",(function(e){return e(authUrl+"/admin/realms/:realm/session-stats",{realm:"@realm"})})),module.factory("RealmClientSessionStats",(function(e){return e(authUrl+"/admin/realms/:realm/client-session-stats",{realm:"@realm"})})),module.factory("RoleClientComposites",(function(e){return e(authUrl+"/admin/realms/:realm/roles-by-id/:role/composites/clients/:client",{realm:"@realm",role:"@role",client:"@client"})})),module.factory("Role",(function(e){return e(authUrl+"/admin/realms/:realm/roles/:role",{realm:"@realm",role:"@role"},{update:{method:"PUT"}})})),module.factory("RoleById",(function(e){return e(authUrl+"/admin/realms/:realm/roles-by-id/:role",{realm:"@realm",role:"@role"},{update:{method:"PUT"}})})),module.factory("ClientRole",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/roles/:role",{realm:"@realm",client:"@client",role:"@role"},{update:{method:"PUT"}})})),module.factory("ClientDefaultClientScopes",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/default-client-scopes/:clientScopeId",{realm:"@realm",client:"@client",clientScopeId:"@clientScopeId"},{update:{method:"PUT"}})})),module.factory("ClientOptionalClientScopes",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/optional-client-scopes/:clientScopeId",{realm:"@realm",client:"@client",clientScopeId:"@clientScopeId"},{update:{method:"PUT"}})})),module.factory("ClientEvaluateProtocolMappers",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/evaluate-scopes/protocol-mappers?scope=:scopeParam",{realm:"@realm",client:"@client",scopeParam:"@scopeParam"})})),module.factory("ClientEvaluateGrantedRoles",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/evaluate-scopes/scope-mappings/:roleContainer/granted?scope=:scopeParam",{realm:"@realm",client:"@client",roleContainer:"@roleContainer",scopeParam:"@scopeParam"})})),module.factory("ClientEvaluateNotGrantedRoles",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/evaluate-scopes/scope-mappings/:roleContainer/not-granted?scope=:scopeParam",{realm:"@realm",client:"@client",roleContainer:"@roleContainer",scopeParam:"@scopeParam"})})),module.factory("ClientEvaluateGenerateExampleAccessToken",(function(e){return buildClientEvaluateGenerateExampleUrl("generate-example-access-token")})),module.factory("ClientEvaluateGenerateExampleIDToken",(function(e){return buildClientEvaluateGenerateExampleUrl("generate-example-id-token")})),module.factory("ClientEvaluateGenerateExampleUserInfo",(function(e){return buildClientEvaluateGenerateExampleUrl("generate-example-userinfo")})),module.factory("ClientProtocolMappersByProtocol",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/protocol-mappers/protocol/:protocol",{realm:"@realm",client:"@client",protocol:"@protocol"})})),module.factory("ClientScopeProtocolMappersByProtocol",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/protocol-mappers/protocol/:protocol",{realm:"@realm",clientScope:"@clientScope",protocol:"@protocol"})})),module.factory("ClientScopeRealmScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/scope-mappings/realm",{realm:"@realm",clientScope:"@clientScope"})})),module.factory("ClientScopeAvailableRealmScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/scope-mappings/realm/available",{realm:"@realm",clientScope:"@clientScope"})})),module.factory("ClientScopeCompositeRealmScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/scope-mappings/realm/composite",{realm:"@realm",clientScope:"@clientScope"})})),module.factory("ClientScopeClientScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/scope-mappings/clients/:targetClient",{realm:"@realm",clientScope:"@clientScope",targetClient:"@targetClient"})})),module.factory("ClientScopeAvailableClientScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/scope-mappings/clients/:targetClient/available",{realm:"@realm",clientScope:"@clientScope",targetClient:"@targetClient"})})),module.factory("ClientScopeCompositeClientScopeMapping",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope/scope-mappings/clients/:targetClient/composite",{realm:"@realm",clientScope:"@clientScope",targetClient:"@targetClient"})})),module.factory("ClientSessionStats",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/session-stats",{realm:"@realm",client:"@client"})})),module.factory("ClientSessionStatsWithUsers",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/session-stats?users=true",{realm:"@realm",client:"@client"})})),module.factory("ClientSessionCount",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/session-count",{realm:"@realm",client:"@client"})})),module.factory("ClientUserSessions",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/user-sessions",{realm:"@realm",client:"@client"})})),module.factory("ClientOfflineSessionCount",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/offline-session-count",{realm:"@realm",client:"@client"})})),module.factory("ClientOfflineSessions",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/offline-sessions",{realm:"@realm",client:"@client"})})),module.factory("RealmLogoutAll",(function(e){return e(authUrl+"/admin/realms/:realm/logout-all",{realm:"@realm"})})),module.factory("ClientPushRevocation",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/push-revocation",{realm:"@realm",client:"@client"})})),module.factory("ClientClusterNode",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/nodes/:node",{realm:"@realm",client:"@client"})})),module.factory("ClientTestNodesAvailable",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/test-nodes-available",{realm:"@realm",client:"@client"})})),module.factory("ClientCertificate",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/certificates/:attribute",{realm:"@realm",client:"@client",attribute:"@attribute"})})),module.factory("ClientCertificateGenerate",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/certificates/:attribute/generate",{realm:"@realm",client:"@client",attribute:"@attribute"},{generate:{method:"POST"}})})),module.factory("ClientCertificateDownload",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/certificates/:attribute/download",{realm:"@realm",client:"@client",attribute:"@attribute"},{download:{method:"POST",responseType:"arraybuffer"}})})),module.factory("Client",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client",{realm:"@realm",client:"@client"},{update:{method:"PUT"}})})),module.factory("ClientScope",(function(e){return e(authUrl+"/admin/realms/:realm/client-scopes/:clientScope",{realm:"@realm",clientScope:"@clientScope"},{update:{method:"PUT"}})})),module.factory("RealmDefaultClientScopes",(function(e){return e(authUrl+"/admin/realms/:realm/default-default-client-scopes/:clientScopeId",{realm:"@realm",clientScopeId:"@clientScopeId"},{update:{method:"PUT"}})})),module.factory("RealmOptionalClientScopes",(function(e){return e(authUrl+"/admin/realms/:realm/default-optional-client-scopes/:clientScopeId",{realm:"@realm",clientScopeId:"@clientScopeId"},{update:{method:"PUT"}})})),module.factory("ClientDescriptionConverter",(function(e){return e(authUrl+"/admin/realms/:realm/client-description-converter",{realm:"@realm"})})),module.factory("ClientInstallation",(function(e){var r=authUrl+"/admin/realms/:realm/clients/:client/installation/providers/:provider";return{url:function(e){return r.replace(":realm",e.realm).replace(":client",e.client).replace(":provider",e.provider)}}})),module.factory("ClientInstallationJBoss",(function(e){var r=authUrl+"/admin/realms/:realm/clients/:client/installation/jboss";return{url:function(e){return r.replace(":realm",e.realm).replace(":client",e.client)}}})),module.factory("ClientSecret",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/client-secret",{realm:"@realm",client:"@client"},{update:{method:"POST"}})})),module.factory("ClientRegistrationAccessToken",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/registration-access-token",{realm:"@realm",client:"@client"},{update:{method:"POST"}})})),module.factory("ClientOrigins",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/allowed-origins",{realm:"@realm",client:"@client"},{update:{method:"PUT",isArray:!0}})})),module.factory("ClientServiceAccountUser",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/service-account-user",{realm:"@realm",client:"@client"})})),module.factory("Current",(function(e,r,t){var a={realms:{},realm:null};return t.$on("$routeChangeStart",(function(){a.realms=e.query(null,(function(e){var t=null;if(r.current.params.realm)for(var l=0;l<e.length;l++)e[l].realm==r.current.params.realm&&(t=e[l]);a.realm=t}))})),a})),module.factory("TimeUnit",(function(){var e={autoUnit:function(e){if(!e)return"Hours";var r="Seconds";return e%60==0&&(r="Minutes",e/=60),e%60==0&&(r="Hours",e/=60),e%24==0&&(r="Days",e/=24),r},toSeconds:function(e,r){switch(r){case"Seconds":return e;case"Minutes":return 60*e;case"Hours":return 3600*e;case"Days":return 86400*e;default:throw"invalid unit "+r}},toUnit:function(e,r){switch(r){case"Seconds":return e;case"Minutes":return Math.ceil(e/60);case"Hours":return Math.ceil(e/3600);case"Days":return Math.ceil(e/86400);default:throw"invalid unit "+r}}};return e})),module.factory("TimeUnit2",(function(){var e={asUnit:function(e){var r="Minutes";e&&(-1==e?e=-1:(e<60&&(e=60),e%60==0&&(r="Minutes",e/=60),e%60==0&&(r="Hours",e/=60),e%24==0&&(r="Days",e/=24)));var t={unit:r,time:e,toSeconds:function(){switch(t.unit){case"Minutes":return 60*t.time;case"Hours":return 3600*t.time;case"Days":return 86400*t.time}}};return t}};return e})),module.filter("removeSelectedPolicies",(function(){return function(e,r){var t=[];for(var a in e){var l=e[a],n=!0;for(var o in r)l.id!==r[o].id||l.multipleSupported||(n=!1);n&&t.push(l)}return t}})),module.factory("IdentityProvider",(function(e){return e(authUrl+"/admin/realms/:realm/identity-provider/instances/:alias",{realm:"@realm",alias:"@alias"},{update:{method:"PUT"}})})),module.factory("IdentityProviderExport",(function(e){var r=authUrl+"/admin/realms/:realm/identity-provider/instances/:alias/export";return{url:function(e){return r.replace(":realm",e.realm).replace(":alias",e.alias)}}})),module.factory("IdentityProviderFactory",(function(e){return e(authUrl+"/admin/realms/:realm/identity-provider/providers/:provider_id",{realm:"@realm",provider_id:"@provider_id"})})),module.factory("IdentityProviderMapperTypes",(function(e){return e(authUrl+"/admin/realms/:realm/identity-provider/instances/:alias/mapper-types",{realm:"@realm",alias:"@alias"})})),module.factory("IdentityProviderMappers",(function(e){return e(authUrl+"/admin/realms/:realm/identity-provider/instances/:alias/mappers",{realm:"@realm",alias:"@alias"})})),module.factory("IdentityProviderMapper",(function(e){return e(authUrl+"/admin/realms/:realm/identity-provider/instances/:alias/mappers/:mapperId",{realm:"@realm",alias:"@alias",mapperId:"@mapperId"},{update:{method:"PUT"}})})),module.factory("AuthenticationFlowExecutions",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/flows/:alias/executions",{realm:"@realm",alias:"@alias"},{update:{method:"PUT"}})})),module.factory("CreateExecutionFlow",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/flows/:alias/executions/flow",{realm:"@realm",alias:"@alias"})})),module.factory("CreateExecution",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/flows/:alias/executions/execution",{realm:"@realm",alias:"@alias"})})),module.factory("AuthenticationFlows",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/flows/:flow",{realm:"@realm",flow:"@flow"})})),module.factory("AuthenticationFormProviders",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/form-providers",{realm:"@realm"})})),module.factory("AuthenticationFormActionProviders",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/form-action-providers",{realm:"@realm"})})),module.factory("AuthenticatorProviders",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/authenticator-providers",{realm:"@realm"})})),module.factory("ClientAuthenticatorProviders",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/client-authenticator-providers",{realm:"@realm"})})),module.factory("AuthenticationFlowsCopy",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/flows/:alias/copy",{realm:"@realm",alias:"@alias"})})),module.factory("AuthenticationFlowsUpdate",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/flows/:flow",{realm:"@realm",flow:"@flow"},{update:{method:"PUT"}})})),module.factory("AuthenticationConfigDescription",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/config-description/:provider",{realm:"@realm",provider:"@provider"})})),module.factory("PerClientAuthenticationConfigDescription",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/per-client-config-description",{realm:"@realm"})})),module.factory("AuthenticationConfig",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/config/:config",{realm:"@realm",config:"@config"},{update:{method:"PUT"}})})),module.factory("AuthenticationExecutionConfig",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/executions/:execution/config",{realm:"@realm",execution:"@execution"})})),module.factory("AuthenticationExecution",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/executions/:execution",{realm:"@realm",execution:"@execution"},{update:{method:"PUT"}})})),module.factory("AuthenticationExecutionRaisePriority",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/executions/:execution/raise-priority",{realm:"@realm",execution:"@execution"})})),module.factory("AuthenticationExecutionLowerPriority",(function(e){return e(authUrl+"/admin/realms/:realm/authentication/executions/:execution/lower-priority",{realm:"@realm",execution:"@execution"})})),module.service("SelectRoleDialog",(function(e){var r={},t=function(r,t,a){return e.open({templateUrl:resourceUrl+"/templates/kc-modal.html",controller:function(e,r,t,a,l){e.title=t,e.message=a,e.btns=l,e.ok=function(){r.close()},e.cancel=function(){r.dismiss("cancel")}},resolve:{title:function(){return r},message:function(){return t},btns:function(){return a}}}).result};return r.confirmDelete=function(e,r,a){var l="Delete "+function(e){var r=document.createElement("div");return r.appendChild(document.createTextNode(e)),r.innerHTML}(r.charAt(0).toUpperCase()+r.slice(1));t(l,"Are you sure you want to permanently delete the "+r+" "+e+"?",{ok:{label:"Delete",cssClass:"btn btn-danger"},cancel:{label:"Cancel",cssClass:"btn btn-default"}}).then(a)},r.confirmGenerateKeys=function(e,r,a){t("Generate new keys for realm","Are you sure you want to permanently generate new keys for "+e+"?",{ok:{label:"Generate Keys",cssClass:"btn btn-danger"},cancel:{label:"Cancel",cssClass:"btn btn-default"}}).then(a)},r.confirm=function(e,r,a,l){t(e,r,{ok:{label:e,cssClass:"btn btn-danger"},cancel:{label:"Cancel",cssClass:"btn btn-default"}}).then(a,l)},r})),module.factory("Group",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId",{realm:"@realm",userId:"@groupId"},{update:{method:"PUT"}})})),module.factory("GroupChildren",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/children",{realm:"@realm",groupId:"@groupId"})})),module.factory("GroupsCount",(function(e){return e(authUrl+"/admin/realms/:realm/groups/count",{realm:"@realm"},{query:{isArray:!1,method:"GET",params:{},transformResponse:function(e){return angular.fromJson(e)}}})})),module.factory("Groups",(function(e){return e(authUrl+"/admin/realms/:realm/groups",{realm:"@realm"})})),module.factory("GroupRealmRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/role-mappings/realm",{realm:"@realm",groupId:"@groupId"})})),module.factory("GroupCompositeRealmRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/role-mappings/realm/composite",{realm:"@realm",groupId:"@groupId"})})),module.factory("GroupAvailableRealmRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/role-mappings/realm/available",{realm:"@realm",groupId:"@groupId"})})),module.factory("GroupClientRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/role-mappings/clients/:client",{realm:"@realm",groupId:"@groupId",client:"@client"})})),module.factory("GroupAvailableClientRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/role-mappings/clients/:client/available",{realm:"@realm",groupId:"@groupId",client:"@client"})})),module.factory("GroupCompositeClientRoleMapping",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/role-mappings/clients/:client/composite",{realm:"@realm",groupId:"@groupId",client:"@client"})})),module.factory("GroupMembership",(function(e){return e(authUrl+"/admin/realms/:realm/groups/:groupId/members",{realm:"@realm",groupId:"@groupId"})})),module.factory("RoleList",(function(e){return e(authUrl+"/admin/realms/:realm/roles",{realm:"@realm"})})),module.factory("RoleMembership",(function(e){return e(authUrl+"/admin/realms/:realm/roles/:role/users",{realm:"@realm",role:"@role"})})),module.factory("ClientRoleList",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/roles",{realm:"@realm",client:"@client"})})),module.factory("ClientRoleMembership",(function(e){return e(authUrl+"/admin/realms/:realm/clients/:client/roles/:role/users",{realm:"@realm",client:"@client",role:"@role"})})),module.factory("UserGroupMembership",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/groups",{realm:"@realm",userId:"@userId"})})),module.factory("UserGroupMapping",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/groups/:groupId",{realm:"@realm",userId:"@userId",groupId:"@groupId"},{update:{method:"PUT"}})})),module.factory("DefaultGroups",(function(e){return e(authUrl+"/admin/realms/:realm/default-groups/:groupId",{realm:"@realm",groupId:"@groupId"},{update:{method:"PUT"}})})),module.factory("SubComponentTypes",(function(e){return e(authUrl+"/admin/realms/:realm/components/:componentId/sub-component-types",{realm:"@realm",componentId:"@componentId"})})),module.factory("Components",(function(e,r){return e(authUrl+"/admin/realms/:realm/components/:componentId",{realm:"@realm",componentId:"@componentId"},{update:{method:"PUT",transformRequest:function(e){return e.config&&r.removeLastEmptyValue(e.config),angular.toJson(e)}},save:{method:"POST",transformRequest:function(e){return e.config&&r.removeLastEmptyValue(e.config),angular.toJson(e)}}})})),module.factory("UserStorageOperations",(function(e){var r={};return r.sync=e(authUrl+"/admin/realms/:realm/user-storage/:componentId/sync",{realm:"@realm",componentId:"@componentId"}),r.removeImportedUsers=e(authUrl+"/admin/realms/:realm/user-storage/:componentId/remove-imported-users",{realm:"@realm",componentId:"@componentId"}),r.unlinkUsers=e(authUrl+"/admin/realms/:realm/user-storage/:componentId/unlink-users",{realm:"@realm",componentId:"@componentId"}),r.simpleName=e(authUrl+"/admin/realms/:realm/user-storage/:componentId/name",{realm:"@realm",componentId:"@componentId"}),r})),module.factory("ClientStorageOperations",(function(e){var r={};return r.simpleName=e(authUrl+"/admin/realms/:realm/client-storage/:componentId/name",{realm:"@realm",componentId:"@componentId"}),r})),module.factory("ClientRegistrationPolicyProviders",(function(e){return e(authUrl+"/admin/realms/:realm/client-registration-policy/providers",{realm:"@realm"})})),module.factory("LDAPMapperSync",(function(e){return e(authUrl+"/admin/realms/:realm/user-storage/:parentId/mappers/:mapperId/sync",{realm:"@realm",componentId:"@componentId",mapperId:"@mapperId"})})),module.factory("UserGroupMembershipCount",(function(e){return e(authUrl+"/admin/realms/:realm/users/:userId/groups/count",{realm:"@realm",userId:"@userId"},{query:{isArray:!1,method:"GET",params:{},transformResponse:function(e){return angular.fromJson(e)}}})}));